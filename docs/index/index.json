{"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/ccompat\/cbinintmacroenum","title":"CBinIntMacroEnum","type":"protocol"},{"path":"\/documentation\/ccompat\/coptionmacroenum","title":"COptionMacroEnum","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ccompat\/nameablebycmacro\/cmacroname","title":"var cMacroName: String","type":"property"}],"path":"\/documentation\/ccompat\/nameablebycmacro","title":"NameableByCMacro","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ccompat\/nameablebycmacros\/cmacronames","title":"var cMacroNames: Set<String>","type":"property"}],"path":"\/documentation\/ccompat\/nameablebycmacros","title":"NameableByCMacros","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ccompat\/coptionmacroset\/init(arrayliteral:)","title":"init(arrayLiteral: CMacroEnum...)","type":"init"},{"path":"\/documentation\/ccompat\/coptionmacroset\/init(rawvalue:)","title":"init?(rawValue: CMacroEnum.RawValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ccompat\/coptionmacroset\/cmacronames","title":"var cMacroNames: Set<String>","type":"property"},{"path":"\/documentation\/ccompat\/coptionmacroset\/rawvalue","title":"var rawValue: CMacroEnum.RawValue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ccompat\/coptionmacroset\/set(_:)","title":"func set(CMacroEnum...)","type":"method"},{"path":"\/documentation\/ccompat\/coptionmacroset\/unset(_:)","title":"func unset(CMacroEnum...)","type":"method"}],"path":"\/documentation\/ccompat\/coptionmacroset","title":"COptionMacroSet","type":"struct"}],"path":"\/documentation\/ccompat","title":"CCompat","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/linking\/framework\/init(_:isprivate:)","title":"init?(String, isPrivate: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/linking\/framework\/get(subframework:)","title":"func get(subFramework: String) -> Framework?","type":"method"}],"path":"\/documentation\/linking\/framework","title":"Framework","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/linking\/handle\/init(name:rawhandle:type:)","title":"init(name: String, rawHandle: UnsafeMutableRawPointer, type: HandleType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/linking\/handle\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/linking\/handle\/rawhandle","title":"let rawHandle: UnsafeMutableRawPointer","type":"property"},{"path":"\/documentation\/linking\/handle\/type","title":"let type: HandleType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/linking\/handle\/handletype\/library","title":"case library","type":"case"},{"path":"\/documentation\/linking\/handle\/handletype\/symbol","title":"case symbol","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/linking\/handle\/handletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/linking\/handle\/handletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/linking\/handle\/handletype","title":"Handle.HandleType","type":"enum"}],"path":"\/documentation\/linking\/handle","title":"Handle","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/linking\/library\/init(withpath:)","title":"init?(withPath: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/linking\/library\/get(objcclass:)","title":"func get(objCClass: String) -> NSObjectProtocol.Type?","type":"method"},{"path":"\/documentation\/linking\/library\/get(objcclass:castto:)","title":"func get<T>(objCClass: String, castTo: T.Type) -> T?","type":"method"},{"path":"\/documentation\/linking\/library\/get(symbol:)","title":"func get(symbol: String) -> Symbol?","type":"method"},{"path":"\/documentation\/linking\/library\/get(symbolataddress:name:)","title":"func get(symbolAtAddress: vm_address_t, name: String) -> Symbol?","type":"method"}],"path":"\/documentation\/linking\/library","title":"Library","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/linking\/symbol\/init(name:rawhandle:)","title":"init(name: String, rawHandle: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/linking\/symbol\/cast(to:)","title":"func cast<T>(to: T.Type) -> T","type":"method"},{"path":"\/documentation\/linking\/symbol\/load(as:)","title":"func load<T>(as: T.Type) -> T","type":"method"}],"path":"\/documentation\/linking\/symbol","title":"Symbol","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/linking\/libsystem","title":"let libSystem: Library","type":"var"}],"path":"\/documentation\/linking","title":"Linking","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migconnection\/init(servicename:baseroutineid:)","title":"init(serviceName: String, baseRoutineId: mach_msg_id_t) throws","type":"init"},{"path":"\/documentation\/machmsg\/migconnection\/init(withport:baseroutineid:)","title":"init(withPort: mach_port_t, baseRoutineId: mach_msg_id_t)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migconnection\/doroutine(_:request:reply:machmsgoptions:)","title":"func doRoutine<RequestPayload, ReplyPayload>(mach_msg_id_t, request: Request<RequestPayload>, reply: Reply<ReplyPayload>, machMsgOptions: MachMsgOptions) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migconnection\/reply","title":"MIGConnection.Reply","type":"typealias"},{"path":"\/documentation\/machmsg\/migconnection\/request","title":"MIGConnection.Request","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migconnection\/parseerror\/unexpectedreplycomplexity(expectedcomplexity:actualcomplexity:)","title":"case unexpectedReplyComplexity(expectedComplexity: Bool, actualComplexity: Bool)","type":"case"},{"path":"\/documentation\/machmsg\/migconnection\/parseerror\/unexpectedreplysize(expectedsize:actualsize:)","title":"case unexpectedReplySize(expectedSize: mach_msg_size_t, actualSize: mach_msg_size_t)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migconnection\/parseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/machmsg\/migconnection\/parseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/migconnection\/parseerror","title":"MIGConnection.ParseError","type":"enum"}],"path":"\/documentation\/machmsg\/migconnection","title":"MIGConnection","type":"class"},{"path":"\/documentation\/machmsg\/migerror","title":"MIGError","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migerrorreply\/payload\/returncode","title":"let returnCode: Int32","type":"property"}],"path":"\/documentation\/machmsg\/migerrorreply\/payload","title":"MIGErrorReply.Payload","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migerrorreply\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migerrorreply\/error","title":"var error: Swift.Error","type":"property"}],"path":"\/documentation\/machmsg\/migerrorreply","title":"MIGErrorReply","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migreply\/init(descriptortypes:payloadtype:payloadsize:)","title":"init(descriptorTypes: [any MachMessageDescriptor.Type], payloadType: Payload.Type, payloadSize: Int?)","type":"init"}],"path":"\/documentation\/machmsg\/migreply","title":"MIGReply","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migrequest\/init(descriptors:payload:payloadsize:)","title":"init(descriptors: [any MachMessageDescriptor], payload: Payload?, payloadSize: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migrequest\/migremoteport","title":"var migRemotePort: mach_port_t","type":"property"},{"path":"\/documentation\/machmsg\/migrequest\/migreplyport","title":"var migReplyPort: mach_port_t","type":"property"}],"path":"\/documentation\/machmsg\/migrequest","title":"MIGRequest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machconnection\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machconnection\/receive(_:options:timeout:)","title":"func receive<ReceivePayload>(MachMessage<ReceivePayload>, options: consuming MachMsgOptions, timeout: mach_msg_timeout_t) throws","type":"method"},{"path":"\/documentation\/machmsg\/machconnection\/send(_:options:timeout:)","title":"func send<SendPayload>(MachMessage<SendPayload>, options: consuming MachMsgOptions, timeout: mach_msg_timeout_t) throws","type":"method"},{"path":"\/documentation\/machmsg\/machconnection\/sendandreceive(_:receivemessage:options:timeout:)","title":"func sendAndReceive<SendPayload, ReceivePayload>(MachMessage<SendPayload>, receiveMessage: MachMessage<ReceivePayload>, options: consuming MachMsgOptions, timeout: mach_msg_timeout_t) throws","type":"method"}],"path":"\/documentation\/machmsg\/machconnection","title":"MachConnection","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessage\/init(descriptortypes:payloadtype:payloadsize:)","title":"init(descriptorTypes: [any MachMessageDescriptor.Type], payloadType: Payload.Type, payloadSize: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessage\/descriptors","title":"let descriptors: MachMessageDescriptors?","type":"property"},{"path":"\/documentation\/machmsg\/machmessage\/header","title":"let header: MachMessageHeader","type":"property"},{"path":"\/documentation\/machmsg\/machmessage\/id","title":"var id: mach_msg_id_t","type":"property"},{"path":"\/documentation\/machmsg\/machmessage\/iscomplex","title":"var isComplex: Bool","type":"property"},{"path":"\/documentation\/machmsg\/machmessage\/localport","title":"var localPort: MachPort","type":"property"},{"path":"\/documentation\/machmsg\/machmessage\/messagesize","title":"var messageSize: mach_msg_size_t","type":"property"},{"path":"\/documentation\/machmsg\/machmessage\/payload","title":"var payload: Payload?","type":"property"},{"path":"\/documentation\/machmsg\/machmessage\/remoteport","title":"var remotePort: MachPort","type":"property"},{"path":"\/documentation\/machmsg\/machmessage\/size","title":"var size: mach_msg_size_t","type":"property"},{"path":"\/documentation\/machmsg\/machmessage\/trailer","title":"var trailer: mach_msg_max_trailer_t","type":"property"},{"path":"\/documentation\/machmsg\/machmessage\/voucherport","title":"var voucherPort: MachPort","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessage\/attatchvoucher()","title":"func attatchVoucher()","type":"method"},{"path":"\/documentation\/machmsg\/machmessage\/copyin(from:)-39at9","title":"func copyIn<FromPayload>(from: MachMessage<FromPayload>) throws","type":"method"},{"path":"\/documentation\/machmsg\/machmessage\/copyin(from:)-5bkj4","title":"func copyIn(from: MachMessage<Payload>)","type":"method"},{"path":"\/documentation\/machmsg\/machmessage\/getpayloadbytes()","title":"func getPayloadBytes() -> UnsafeRawBufferPointer?","type":"method"},{"path":"\/documentation\/machmsg\/machmessage\/setpayloadbytes(_:count:)","title":"func setPayloadBytes(UnsafeRawPointer, count: Int) throws","type":"method"}],"path":"\/documentation\/machmsg\/machmessage","title":"MachMessage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessagedescriptors\/init(bodypointer:descriptors:)","title":"init(bodyPointer: UnsafeMutablePointer<mach_msg_body_t>, descriptors: [any MachMessageDescriptor])","type":"init"},{"path":"\/documentation\/machmsg\/machmessagedescriptors\/init(bodypointer:types:)","title":"init(bodyPointer: UnsafeMutablePointer<mach_msg_body_t>, types: [any MachMessageDescriptor.Type])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessagedescriptors\/list","title":"var list: [any MachMessageDescriptor]","type":"property"},{"path":"\/documentation\/machmsg\/machmessagedescriptors\/size","title":"var size: Int","type":"property"}],"path":"\/documentation\/machmsg\/machmessagedescriptors","title":"MachMessageDescriptors","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessageheader\/bits-swift.struct","title":"MachMessageHeader.Bits","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessageheader\/bits-swift.property","title":"var bits: Bits","type":"property"},{"path":"\/documentation\/machmsg\/machmessageheader\/localport","title":"var localPort: MachPort","type":"property"},{"path":"\/documentation\/machmsg\/machmessageheader\/messageid","title":"var messageID: mach_msg_id_t","type":"property"},{"path":"\/documentation\/machmsg\/machmessageheader\/messagesize","title":"var messageSize: mach_msg_size_t","type":"property"},{"path":"\/documentation\/machmsg\/machmessageheader\/remoteport","title":"var remotePort: MachPort","type":"property"},{"path":"\/documentation\/machmsg\/machmessageheader\/voucherport","title":"var voucherPort: MachPort","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessageheader\/withunsafemutablepointer(_:)","title":"func withUnsafeMutablePointer<T>((UnsafeMutablePointer<mach_msg_header_t>) throws -> T) rethrows -> T","type":"method"}],"path":"\/documentation\/machmsg\/machmessageheader","title":"MachMessageHeader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/serviceconnection\/init(withport:)","title":"init(withPort: mach_port_t)","type":"init"},{"path":"\/documentation\/machmsg\/serviceconnection\/init(withservicename:)","title":"init(withServiceName: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/serviceconnection\/connectionport","title":"var connectionPort: mach_port_t","type":"property"}],"path":"\/documentation\/machmsg\/serviceconnection","title":"ServiceConnection","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessagedescriptor\/rawdescriptortype","title":"RawDescriptorType","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessagedescriptor\/init(rawdescriptor:)","title":"init(rawDescriptor: RawDescriptorType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessagedescriptor\/rawdescriptor","title":"var rawDescriptor: RawDescriptorType","type":"property"},{"path":"\/documentation\/machmsg\/machmessagedescriptor\/size-swift.property","title":"var size: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmessagedescriptor\/size-swift.type.property","title":"static var size: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/machmsg\/machmessagedescriptor\/type-swift.property","title":"var type: DescriptorType","type":"property"}],"title":"MachMessageDescriptor Implementations","type":"groupMarker"}],"path":"\/documentation\/machmsg\/machmessagedescriptor\/type-swift.type.property","title":"static var type: DescriptorType","type":"property"}],"path":"\/documentation\/machmsg\/machmessagedescriptor","title":"MachMessageDescriptor","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardedportdescriptor\/init(port:guardvalue:flags:)","title":"init(port: MachPort, guardValue: UInt, flags: GuardFlags)","type":"init"},{"path":"\/documentation\/machmsg\/guardedportdescriptor\/init(rawdescriptor:)","title":"init(rawDescriptor: mach_msg_guarded_port_descriptor_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardedportdescriptor\/rawdescriptor","title":"let rawDescriptor: mach_msg_guarded_port_descriptor_t","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardedportdescriptor\/type-swift.type.property","title":"static let type: DescriptorType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardedportdescriptor\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/machmsg\/guardedportdescriptor\/type-swift.property","title":"var type: DescriptorType","type":"property"}],"path":"\/documentation\/machmsg\/guardedportdescriptor\/machmessagedescriptor-implementations","title":"MachMessageDescriptor Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/guardedportdescriptor","title":"GuardedPortDescriptor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machport\/init()","title":"init()","type":"init"},{"path":"\/documentation\/machmsg\/machport\/init(port:disposition:)","title":"init(port: mach_port_t, disposition: Disposition)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.property","title":"let disposition: Disposition","type":"property"},{"path":"\/documentation\/machmsg\/machport\/port","title":"let port: mach_port_t","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/copyreceive","title":"case copyReceive","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/copysend","title":"case copySend","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/disposereceive","title":"case disposeReceive","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/disposesend","title":"case disposeSend","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/disposesendonce","title":"case disposeSendOnce","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/makesend","title":"case makeSend","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/makesendonce","title":"case makeSendOnce","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/movereceive","title":"case moveReceive","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/movesend","title":"case moveSend","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/movesendonce","title":"case moveSendOnce","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/init(rawvalue:)","title":"init?(rawValue: mach_msg_type_name_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/cmacroname","title":"var cMacroName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/machport\/disposition-swift.enum","title":"MachPort.Disposition","type":"enum"}],"path":"\/documentation\/machmsg\/machport","title":"MachPort","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/ooldescriptor\/init(address:size:deallocate:copymethod:isvolatile:)","title":"init(address: UnsafeMutableRawPointer, size: mach_msg_size_t, deallocate: Bool, copyMethod: CopyOption, isVolatile: Bool)","type":"init"},{"path":"\/documentation\/machmsg\/ooldescriptor\/init(data:deallocate:copymethod:isvolatile:)","title":"init(data: Data, deallocate: Bool, copyMethod: CopyOption, isVolatile: Bool)","type":"init"},{"path":"\/documentation\/machmsg\/ooldescriptor\/init(rawdescriptor:)","title":"init(rawDescriptor: mach_msg_ool_descriptor_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/ooldescriptor\/data","title":"var data: Data","type":"property"},{"path":"\/documentation\/machmsg\/ooldescriptor\/rawdescriptor","title":"let rawDescriptor: mach_msg_ool_descriptor_t","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/ooldescriptor\/type-swift.type.property","title":"static let type: DescriptorType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/ooldescriptor\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/machmsg\/ooldescriptor\/type-swift.property","title":"var type: DescriptorType","type":"property"}],"path":"\/documentation\/machmsg\/ooldescriptor\/machmessagedescriptor-implementations","title":"MachMessageDescriptor Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/ooldescriptor","title":"OOLDescriptor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/oolportsdescriptor\/init(ports:disposition:deallocate:copymethod:)","title":"init(ports: [MachPort], disposition: MachPort.Disposition, deallocate: Bool, copyMethod: CopyOption)","type":"init"},{"path":"\/documentation\/machmsg\/oolportsdescriptor\/init(rawdescriptor:)","title":"init(rawDescriptor: mach_msg_ool_ports_descriptor_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/oolportsdescriptor\/rawdescriptor","title":"let rawDescriptor: mach_msg_ool_ports_descriptor_t","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/oolportsdescriptor\/type-swift.type.property","title":"static let type: DescriptorType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/oolportsdescriptor\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/machmsg\/oolportsdescriptor\/type-swift.property","title":"var type: DescriptorType","type":"property"}],"path":"\/documentation\/machmsg\/oolportsdescriptor\/machmessagedescriptor-implementations","title":"MachMessageDescriptor Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/oolportsdescriptor","title":"OOLPortsDescriptor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/portdescriptor\/init(port:)","title":"init(port: MachPort)","type":"init"},{"path":"\/documentation\/machmsg\/portdescriptor\/init(rawdescriptor:)","title":"init(rawDescriptor: mach_msg_port_descriptor_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/portdescriptor\/port","title":"var port: MachPort","type":"property"},{"path":"\/documentation\/machmsg\/portdescriptor\/rawdescriptor","title":"let rawDescriptor: mach_msg_port_descriptor_t","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/portdescriptor\/type-swift.type.property","title":"static let type: DescriptorType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/portdescriptor\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/machmsg\/portdescriptor\/type-swift.property","title":"var type: DescriptorType","type":"property"}],"path":"\/documentation\/machmsg\/portdescriptor\/machmessagedescriptor-implementations","title":"MachMessageDescriptor Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/portdescriptor","title":"PortDescriptor","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardflags","title":"GuardFlags","type":"typealias"},{"path":"\/documentation\/machmsg\/machmsgoptions","title":"MachMsgOptions","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/machmsg\/copyoption\/allocate","title":"case allocate","type":"case"},{"path":"\/documentation\/machmsg\/copyoption\/kalloccopy","title":"case kallocCopy","type":"case"},{"path":"\/documentation\/machmsg\/copyoption\/overwrite","title":"case overwrite","type":"case"},{"path":"\/documentation\/machmsg\/copyoption\/physical","title":"case physical","type":"case"},{"path":"\/documentation\/machmsg\/copyoption\/virtual","title":"case virtual","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/copyoption\/init(rawvalue:)","title":"init?(rawValue: mach_msg_copy_options_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/copyoption\/cmacroname","title":"var cMacroName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/machmsg\/copyoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/machmsg\/copyoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/copyoption\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/copyoption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/machmsg\/copyoption\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/copyoption","title":"CopyOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/machmsg\/descriptortype\/guardedport","title":"case guardedPort","type":"case"},{"path":"\/documentation\/machmsg\/descriptortype\/ool","title":"case ool","type":"case"},{"path":"\/documentation\/machmsg\/descriptortype\/oolports","title":"case oolPorts","type":"case"},{"path":"\/documentation\/machmsg\/descriptortype\/oolvolatile","title":"case oolVolatile","type":"case"},{"path":"\/documentation\/machmsg\/descriptortype\/port","title":"case port","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/descriptortype\/init(rawvalue:)","title":"init?(rawValue: mach_msg_descriptor_type_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/descriptortype\/cmacroname","title":"var cMacroName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/machmsg\/descriptortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/machmsg\/descriptortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/descriptortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/descriptortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/machmsg\/descriptortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/descriptortype","title":"DescriptorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardflag\/immovablereceive","title":"case immovableReceive","type":"case"},{"path":"\/documentation\/machmsg\/guardflag\/none","title":"case none","type":"case"},{"path":"\/documentation\/machmsg\/guardflag\/unguardedonsend","title":"case unguardedOnSend","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardflag\/init(rawvalue:)","title":"init?(rawValue: mach_msg_guard_flags_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardflag\/cmacroname","title":"var cMacroName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardflag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/machmsg\/guardflag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardflag\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/guardflag\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/machmsg\/guardflag\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/guardflag","title":"GuardFlag","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migerrorcode\/arraytoolarge","title":"case arrayTooLarge","type":"case"},{"path":"\/documentation\/machmsg\/migerrorcode\/badarguments","title":"case badArguments","type":"case"},{"path":"\/documentation\/machmsg\/migerrorcode\/badid","title":"case badId","type":"case"},{"path":"\/documentation\/machmsg\/migerrorcode\/exception","title":"case exception","type":"case"},{"path":"\/documentation\/machmsg\/migerrorcode\/noreply","title":"case noReply","type":"case"},{"path":"\/documentation\/machmsg\/migerrorcode\/remoteerror","title":"case remoteError","type":"case"},{"path":"\/documentation\/machmsg\/migerrorcode\/replymismatch","title":"case replyMismatch","type":"case"},{"path":"\/documentation\/machmsg\/migerrorcode\/serverdied","title":"case serverDied","type":"case"},{"path":"\/documentation\/machmsg\/migerrorcode\/trailererror","title":"case trailerError","type":"case"},{"path":"\/documentation\/machmsg\/migerrorcode\/typeerror","title":"case typeError","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migerrorcode\/init(rawvalue:)","title":"init?(rawValue: kern_return_t)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migerrorcode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/machmsg\/migerrorcode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migerrorcode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/migerrorcode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/machmsg\/migerrorcode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/migerrorcode","title":"MIGErrorCode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgkerneloption\/sendalways","title":"case sendAlways","type":"case"},{"path":"\/documentation\/machmsg\/machmsgkerneloption\/sendimportance","title":"case sendImportance","type":"case"},{"path":"\/documentation\/machmsg\/machmsgkerneloption\/sendkernel","title":"case sendKernel","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgkerneloption\/init(rawvalue:)","title":"init?(rawValue: mach_msg_option_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgkerneloption\/cmacroname","title":"var cMacroName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgkerneloption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/machmsg\/machmsgkerneloption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgkerneloption\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgkerneloption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/machmsg\/machmsgkerneloption\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/machmsgkerneloption","title":"MachMsgKernelOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgoption\/receive","title":"case receive","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/receiveguardeddesc","title":"case receiveGuardedDesc","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/receiveinterrupt","title":"case receiveInterrupt","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/receivelarge","title":"case receiveLarge","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/receivelargeidentity","title":"case receiveLargeIdentity","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/receivesyncpeek","title":"case receiveSyncPeek","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/receivesyncwait","title":"case receiveSyncWait","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/receivetimeout","title":"case receiveTimeout","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/receivevoucher","title":"case receiveVoucher","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/send","title":"case send","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/sendfilternonfatal","title":"case sendFilterNonfatal","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/sendinterrupt","title":"case sendInterrupt","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/sendnoimportance","title":"case sendNoimportance","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/sendnotify","title":"case sendNotify","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/sendoverride","title":"case sendOverride","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/sendpropagateqos","title":"case sendPropagateQos","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/sendsyncbootstrapcheckin","title":"case sendSyncBootstrapCheckin","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/sendsyncoverride","title":"case sendSyncOverride","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/sendtimeout","title":"case sendTimeout","type":"case"},{"path":"\/documentation\/machmsg\/machmsgoption\/sendtrailer","title":"case sendTrailer","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgoption\/init(rawvalue:)","title":"init?(rawValue: mach_msg_option_t)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgoption\/cmacroname","title":"var cMacroName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/machmsg\/machmsgoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgoption\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/machmsg\/machmsgoption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/machmsg\/machmsgoption\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/machmsg\/machmsgoption","title":"MachMsgOption","type":"enum"}],"path":"\/documentation\/machmsg","title":"MachMsg","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}